version: '3.7'

services:
  db:
    image: mysql:8.0.33-oracle
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ioblog
    command: >
      bash -c "
        cp /ioblog_backup.sql /docker-entrypoint-initdb.d/;
        docker-entrypoint.sh --lower_case_table_names=1;
      "
    volumes:
      - ./ioblog_backup.sql:/ioblog_backup.sql
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0.11-bullseye
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  server:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    image: node:lts-alpine3.16
    ports:
      - 8000:8000
    command: sh -c 'cd server && npm i && npm run start:dev'
    volumes:
      - ./server:/server

  client:
    image: node:lts-alpine3.16
    ports:
      - 443:443
    command: sh -c 'cd client && npm i && npm run build && node app.js'
    volumes:
      - ./client:/client

    # condition: service_started

# volumes:
#   - type: bind
#     source: C:\ProgramData\MySQL\MySQL Server 8.0\Data
#     target: /var/lib/mysql
#     consistency: consistent
#     read_only: false
# user: "1000:1000"

# volumes:
#   db_data:
#     driver: local
#     driver_opts:
#       type: none
#       device: C:\ProgramData\MySQL\MySQL Server 8.0\Data
#       o: bind
#       uid: "mysql"
#       gid: "mysql"

# db-data:
#   image: alpine:latest
#   command: chown -R mysql:mysql && cp -a /data/. /var/lib/mysql/
#   volumes:
#     - type: bind
#       source: C:\ProgramData\MySQL\MySQL Server 8.0\Data
#       target: /data